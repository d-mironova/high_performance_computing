# Parallel Poisson's Equation Solver using SOR Algorithm

This project implements a parallel solver for Poisson's equation in a unit square using the Successive Over-Relaxation (SOR) method optimized with the OpenMP framework. The solver tests the scalability across different grid sizes and optimizes the over-relaxation parameter (\(\gamma\)) for improved convergence.

## Prerequisites

Before compiling and running this solver, ensure you have the following installed:
- GCC compiler with OpenMP support
- A Unix-like environment (Linux/MacOS)

## Compilation Instructions

To compile the Poisson's equation solver and Relaxation parameter calculation, open your terminal and navigate to the directory containing the source files. Then execute the following commands:

g++ -fopenmp relax_param.cpp -o relax_param
./relax_param

```bash
g++ -fopenmp -o poisson_solver poisson_solver.cpp
./poisson_solver

Once compiled, you can run the solver by specifying the number of threads and
the grid size as command-line arguments. Use the following syntax to execute
the program:

./poisson_solver [number_of_threads] [grid_size]

The output from the terminal is specified in the report
